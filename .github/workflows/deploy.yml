name: Build and Deploy on Merge

on:
  push:
    branches:
      - main # main 브랜치에 대한 push 이벤트 감지

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: hogeun-ecr-repo
  EKS_CLUSTER: hogeun-eks-cluster
  K8S_NAMESPACE: default
  APP_NAME: didle-app

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 동적 이미지 태그 생성
      - name: Generate image tag
        id: tag
        run: |
          echo "TAG=$(date +%Y%m%d)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # 3. AWS 권한 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActions-${{ github.run_id }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/cicd-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      # 4. ECR 로그인 및 도커 이미지 빌드/푸시
      - name: Build and Push Docker Image
        run: |
          cd didle/didle
          docker build -t ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.tag.outputs.TAG }} .
          docker push ${{ steps.ecr-login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.tag.outputs.TAG }}
        env:
          AWS_ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}

      # 5. Kustomize를 통한 매니페스트 업데이트 및 배포
      - name: Update Kustomize configuration and Deploy to EKS
        run: |
          cd didle/didle/k8s/manifests
          kustomize edit set image ${{ steps.ecr-login.outputs.registry }}/hogeun-ecr-repo:${{ steps.tag.outputs.TAG }}
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/${{ env.APP_NAME }} -n ${{ env.K8S_NAMESPACE }}
